module centerLight (Clock, Reset, L, R, NL, NR, lightOn);
 input logic Clock, Reset;
 // L is true when left key is pressed, R is true when the right key
 // is pressed, NL is true when the light on the left is on, and NR
 // is true when the light on the right is on.
 input logic L, R, NL, NR;
 // when lightOn is true, the center light should be on.
 output logic lightOn;
 // Your code goes here!!
 parameter off = 1'b0, on = 1'b1;
 logic [1:0] ps, ns;
 always_comb begin
  case (lightOn) :
   on : if (L & R | ~L & ~R)
	 ns = on;
	 else
	  ns = off;
	
	off : if (L & NR | R & NL)
	 ns = on;
	else
	 ns = off;

endcase
  
 end
 
endmodule

module normalLight (Clock, Reset, L, R, NL, NR, lightOn);
 input logic Clock, Reset;
 // L is true when left key is pressed, R is true when the right key
 // is pressed, NL is true when the light on the left is on, and NR
 // is true when the light on the right is on.
 input logic L, R, NL, NR;
 // when lightOn is true, the normal light should be on.
 output logic lightOn;
 // Your code goes here!!
 parameter off = 1'b0, on = 1'b1;
 logic [1:0] ps, ns;
 always_comb begin
  case (lightOn) :
   on : if (L & R | ~L & ~R)
	 ns = on;
	 else
	  ns = off;
	
	off : if (L & NR | R & NL)
	 ns = on;
	else
	 ns = off;

endcase
  
 end
 
endmodule 
